---
export interface Props {
  title: string;
  poster: string;
  genres: string[];
  rating: number;
  director: string;
  writers: string;
  stars: string;
  releaseDate: string;
  releaseRegion?: string;
  description?: string;
  location: string
  soundtrack?: string;
}

const {
  title,
  poster,
  genres,
  rating,
  director,
  writers,
  stars,
  releaseDate,
  releaseRegion = 'USA',
  description = '',
  location = '',
  soundtrack = ''
} = Astro.props;
---

<div style="display: flex; justify-content: center;">
  <div style="display: flex; position: absolute; flex-direction: column; align-items: center; text-align: center; padding-top: 250px;">
    <img style="border-radius: 25px; width: 570px; height: 806px; object-fit: cover" src={poster} alt={`Poster of ${title}`} />
    <div style="position: absolute; font-size: 40px; color: white; margin-top: 725px; font-weight: 900; margin-right: 400px; white-space: nowrap; background-color: rgba(112, 112, 112, 0.3);
  backdrop-filter: blur(5px); -webkit-backdrop-filter: blur(5px);border-radius: 8px; padding-right: 20px; text-shadow: 0 0 6px rgba(0, 0, 0, 0.5);">
      ‚≠ê{rating.toFixed(1)} 
    </div>
  </div>

    <div style="background-color: white; color: black; margin: 50px; border-radius: 25px; margin-top: 600px; padding-top: 450px; width:100%">
        <div style="padding: 20px;">
            <div style="text-align: center; font-size: 50px; font-weight: bolder ;word-break: break-word; overflow-wrap: break-word; max-width: 750px; margin: 0 auto;">
                {title}
            </div>
        </div>
        <div style="display: flex; justify-content: center; gap: 10px; padding-bottom: 20px;">
        {genres.map((genre) => (
            <span style="background-color: #4B5940; color: white; border-radius: 20px; font-size: 40px; font-weight: bold; padding: 5px 20px;">
            {genre}
            </span>
        ))}
        </div>

        <div class="info_text_div">
            <p class="info_text_title">Director:</p>
            <p class="info_text">{director}</p>
        </div>

        <div class="info_text_div">
            <p class="info_text_title">Writers:</p>
            <p class="info_text">{writers}</p>
        </div>

        <div class="info_text_div">
            <p class="info_text_title">Stars:</p>
            <p class="info_text">{stars}</p>
        </div>

        <div class="info_text_div">
            <p class="info_text_title">Release Date:</p>
            <p class="info_text">{releaseDate} ({releaseRegion})</p>
        </div>

        <div class="info_text_div">
            <p style="font-size: 35px; text-align:justify"> 
                {description ? description : 'No description available.'}
            </p>
        </div>

        <div class="info_text_div">
            <p class="info_text_title">Location:</p>
            <p class="info_text">{location}</p>
        </div>

        <div class="info_audio_div">
            <p class="info_text_title">Soundtrack:</p>
            <audio id="player" src={soundtrack}></audio>
        </div>
    </div>
  </div>
</div>

<head>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/mediaelement@4.2.16/build/mediaelementplayer.min.css"
  />
  <script src="https://cdn.jsdelivr.net/npm/mediaelement@4.2.16/build/mediaelement-and-player.min.js"></script>
</head>
<style>
.info_text_div {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;
    margin-left: 25px;
    margin-right: 25px;
}

.info_audio_div {
    display: flex;
    justify-content: flex-start;
    flex-direction: column;
    align-items: right;
    gap: 20px;
    margin-bottom: 20px;
    margin-left: 25px;
    margin-right: 25px;
    padding-bottom: 20px;
}

.info_text, .info_text_title {
    margin: 0;
    padding: 0;
}

.info_text {
    font-size: 35px;
    line-height: 1.2;
}

.info_text_title {
    font-size: 40px;
    color: gray;
    font-weight: bold;
    white-space: nowrap;
}

</style>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    const audio = document.getElementById('player');
    if (audio && window.MediaElementPlayer) {
      new window.MediaElementPlayer(audio, {
        features: ['playpause', 'progress', 'current', 'duration'],
        audioWidth: 600,
        audioHeight: 80,
        alwaysShowControls: true,
        stretching: 'auto',
      });
    }
  });
</script>

